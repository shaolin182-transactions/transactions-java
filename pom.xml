<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.transactions</groupId>
  <artifactId>transactions-java-server</artifactId>
  <version>2.1.0-SNAPSHOT</version>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.7</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <packaging>pom</packaging>

  <name>transactions-java-server</name>

  <modules>
    <module>api</module>
    <module>model</module>
    <module>persistence-mongodb</module>
    <module>service</module>
    <module>sonar-report</module>
    <module>common-connector</module>
  </modules>

  <properties>
    <java.version>17</java.version>

    <maven.compiler.release>17</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- project -->
    <project.version>1.0-SNAPSHOT</project.version>

    <!-- Dependencies versions-->
    <json-patch.version>1.13</json-patch.version>
    <expressly.version>6.0.0</expressly.version>
    <!-- END dependencies versions -->

    <!-- Test Dependencies versions -->
    <de.flapdoodle.embed.mongo.version>4.9.2</de.flapdoodle.embed.mongo.version>

    <!-- a more recent version for library testcontainers-keycloak exists but it is compatible with keycloak v22.x
    But we still use keycloak v21.x
    More detail here : https://github.com/dasniko/testcontainers-keycloak -->
    <testcontainers-keycloak.version>2.6.0</testcontainers-keycloak.version>
    <testcontainers-mongo.version>1.21.3</testcontainers-mongo.version>
    <!-- END Test Dependencies versions -->

    <!-- Plugins versions-->
    <maven-clean-plugin.version>3.5.0</maven-clean-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven-compiler-plugin.version>3.14.1</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>3.5.4</maven-surefire-plugin.version>
    <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
    <maven-install-plugin.version>3.1.4</maven-install-plugin.version>
    <maven-deploy-plugin.version>3.1.4</maven-deploy-plugin.version>
    <maven-site-plugin.version>3.21.0</maven-site-plugin.version>
    <maven-project-info-reports-plugin.version>3.9.0</maven-project-info-reports-plugin.version>
    <jacoco-plugin.version>0.8.14</jacoco-plugin.version>
    <sonar-maven-plugin.version>4.0.0.4121</sonar-maven-plugin.version>
    <dependency-check-maven.version>12.1.8</dependency-check-maven.version>
    <versions-maven-plugin.version>2.19.1</versions-maven-plugin.version>
    <!-- END Plugins versions-->

    <!-- SONAR Properties -->
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.organization>shaolin182-transactions</sonar.organization>
    <sonar.coverage.jacoco.xmlReportPaths>sonar-report/target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    <aggregate.report.dir>sonar-report/target/site/jacoco-aggregate/jacoco.xml</aggregate.report.dir>
    <!-- END SONAR Properties -->

  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.transactions</groupId>
        <artifactId>model</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.transactions</groupId>
        <artifactId>service</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.transactions</groupId>
        <artifactId>persistence-mongodb</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.transactions</groupId>
        <artifactId>server</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.transactions</groupId>
        <artifactId>common-connector</artifactId>
        <version>${project.version}</version>
      </dependency>


      <dependency>
        <groupId>org.glassfish.expressly</groupId>
        <artifactId>expressly</artifactId>
        <version>${expressly.version}</version>
      </dependency>

      <!-- For handling patch operation -->
      <dependency>
        <groupId>com.github.java-json-tools</groupId>
        <artifactId>json-patch</artifactId>
        <version>${json-patch.version}</version>
      </dependency>
      <!-- END For handling patch operation -->

      <!-- Embedded Mongo DB database for unit test-->
      <dependency>
        <groupId>de.flapdoodle.embed</groupId>
        <artifactId>de.flapdoodle.embed.mongo</artifactId>
        <version>${de.flapdoodle.embed.mongo.version}</version>
        <scope>test</scope>
      </dependency>
      <!-- End Unit test purpose -->

      <!-- Integration test -->
      <dependency>
        <groupId>com.github.dasniko</groupId>
        <artifactId>testcontainers-keycloak</artifactId>
        <version>${testcontainers-keycloak.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>mongodb</artifactId>
        <version>${testcontainers-mongo.version}</version>
        <scope>test</scope>
      </dependency>
      <!-- End Integration test -->
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven-project-info-reports-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${dependency-check-maven.version}</version>
        <configuration>
          <nvdApiKey>${NVD_API_KEY}</nvdApiKey>
          <skip>false</skip>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>aggregate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.cyclonedx</groupId>
        <artifactId>cyclonedx-maven-plugin</artifactId>
        <configuration>
          <skip>true</skip>
          <outputFormat>json</outputFormat>
          <outputName>sbom</outputName>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>makeAggregateBom</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-maven-plugin.version}</version>
        <configuration>
          <ignoredVersions>.*-RC.*,.*-M.*,.*-alpha.*</ignoredVersions>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <distributionManagement>
    <repository>
      <id>github</id>
      <name>GitHub Transactions</name>
      <url>https://maven.pkg.github.com/shaolin182-transactions/transactions-java</url>
    </repository>
  </distributionManagement>
</project>
